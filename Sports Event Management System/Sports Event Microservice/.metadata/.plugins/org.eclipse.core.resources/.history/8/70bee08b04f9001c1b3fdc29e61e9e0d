package com.sports.event.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import com.sports.event.entity.Sports;
import com.sports.event.entity.Events;
import com.sports.event.repository.EventsRepository;
import com.sports.event.repository.SportsRepository;

@Service
public class SportsEventServiceImpl implements SportsEventService {

	@Autowired
	private SportsRepository sr;

	@Autowired
	private EventsRepository er;

	public ResponseEntity<String> addSport(Sports sport) {
		Sports sports = null;
		try {
			sports = this.sr.save(sport);
			String result = sports + " added successfully";
			return ResponseEntity.of(Optional.of(result));
		} catch (Exception e) {
			e.printStackTrace();
			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
		}

	}

	public List<Sports> listAllSportsDetails() {
		return  (List<Sports>)this.sr.findAll();
		
	}

	public Sports getSportsByName(String sportName) {
		return  sr.findBySportsName(sportName).orElseThrow() -> new SportsNotFoundException("Cannot found Sport with sport name: "+sportName);
		
		
	}

	public String addEvent(Events event) {
		Events events = this.er.save(event);
		String result = events + " added successfully";
		return result;
	}

	public ResponseEntity<String> deleteEvent(Long eventId) {
		try {
			String result = er.findById(eventId) + " deleted successfully";
			er.deleteById(eventId);
			return ResponseEntity.status(HttpStatus.NO_CONTENT).build();
		} catch (Exception e) {
			e.printStackTrace();
			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
		}

	}

	public List<Events> events() {
		List<Events> eList = (List<Events>) this.er.findAll();
		return eList;
	}

	public Events eventsByName(String eventName) {
		Events events = er.findByEventName(eventName);
		return events;
	}

}
