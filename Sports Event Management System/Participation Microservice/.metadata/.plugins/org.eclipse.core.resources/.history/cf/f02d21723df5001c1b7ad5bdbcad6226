package com.participation.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.participation.entity.Participation;
import com.participation.service.ParticipationService;

@RestController
@RequestMapping("/part")
public class ParticipationController {

	@Autowired
	private ParticipationService ps;
	

	@GetMapping("/addpart")
	public Participation addParticipation(@ResponseBody Participation part) {
		return ps.addParticipation(part);
	}
	
	@GetMapping("/getParticipations")
	public Participation listAllParticipation() {
		return ps.listAllParticipation());
	}
	
	@PutMapping("/updateStatus/{partId}")
	public String updateStatus(@PathVariable Long partId) {
		return ps.updateStatus(partId);
	}
	
	// handle add product form
		@RequestMapping("/add-product")
		public String addProduct(Model M) {
			M.addAttribute("title", "Add-Product");
			return "add_Product";
		}

		// handle product form
		@RequestMapping(path = "/handle-product", method = RequestMethod.POST)
		public RedirectView handleProduct(@ModelAttribute Product product, HttpServletRequest request) {
			productDao.createProduct(product);
			RedirectView redirectView = new RedirectView();
			redirectView.setUrl(request.getContextPath() + "/");
			return redirectView;
		}

		// delete handler
		@RequestMapping("/delete/{productId}")
		public RedirectView deleteHandler(@PathVariable("productId") int id, HttpServletRequest request) {
			this.productDao.deleteProduct(id);
			RedirectView re = new RedirectView();
			re.setUrl(request.getContextPath() + "/");
			return re;
		}
		
		// Update Handler
		@RequestMapping("/update/{productId}")
		public String updateHandler(@PathVariable("productId") int id, Model m,  HttpServletRequest request) {
			Product pro=this.productDao.getProduct(id);
			m.addAttribute("product", pro);
			return "update_form";
		}

}

/*
 * // show add product form
		@RequestMapping("/")
		public String showHome(Model m) {
			List<Product> products = productDao.allProduct();
			m.addAttribute("product", products);
			return "home";
		}
		*/
 */